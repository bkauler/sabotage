[deps]
quirky-stage1
quirky-core
quirky-cli
quirky-desktop

gc
gsl
xorg
libtool
xclip
xprop
xrandr
xrdb
xsel
xset
xsetroot
xwininfo
vala
usbutils
usb-modeswitch
urxvt
upx
unrar
zip
unzip
rtorrent
syslinux6
squashfs-tools
ppp
dbus
dbus-glib
delta
ethtool
fuse
hunspell
lcms2
cups
cups-filters
f2fs-tools
youtube-dl
gnutls
glib-networking
gtkmm
giflib
libmad
libtiff
libogg
libvorbis-aotuv
libtheora
lame
libvpx
libwebp
x264
x265
xvid
a52dec
libflac
audiofile
vorbis-tools
libcddb
libcdio
libcdio-paranoia
ffmpeg
mplayer
asunder
openbox
obconf
bluefish
sweep
abiword
audacity
evince
epdfview
grafx2
gnumeric
gpicview
gimp
gitk
leafpad
transmission
ixchat
dillo
netsurf
sylpheed
geany
firefox
inkscape

[build]
#Quirky Linux is a fork of Puppy Linux. Quirky and Puppy use a build system named Woof*,
#that can build the distro from the binary packages of any other distro, including
#its own native .pet binary package format.
#The packages built by Sabotage can also be imported into Woof*, though I (BK) am
#also intending for a merge of the core concepts of Sabotage, such as the directory
#hierarchy and butch, into a new type of Quirky.
#
#bkauler/sabotage at github is the repository for this "Sabotaged Quirky" project
#(yeah, that can be the codename, or just "SQ"), which is a fork of sabotage-linux/sabotage.
#To all bkauler to be always able to pull from sabotage-linux, all of the Quirky-specific
# stuff is kept separate. You will see pkg/qky-* and pkg/quirky-* recipes in bkauler
#repo. At build-time on a local clone of bkauler repo on a PC, done by running
#"./build-stage0" (after setting up file 'config') followed by "./enter-chroot",
#the recipes are executed. This is done by running "butch install quirky-stage1"
#then: quirky-core, quirky-cli, quirky-desktop. Or just run 'quirky' (the recipe
#you are looking at now) and it will run all the others.
#In pkg/quirky-core, there is a package 'quirky-customize', and this is the key
#recipe, it merges all the qky-* Quirky-specific recipes. For example, qky-e2fsprogs
#will replace pkg/e2fsprogs.
